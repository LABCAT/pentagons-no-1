{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ColourCalculators.js","js/classes/Pentagon.js","audio/pentagons-no-1.ogg","audio/pentagons-no-1.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","_jsxs","id","className","xmlns","height","viewBox","width","children","_jsx","d","fill","TetradicColourCalculator","hue","saturation","arguments","length","undefined","brightness","alpha","set","i","colour","color","push","Pentagon","constructor","p","x","y","stroke","includeSubSet","this","speed","random","size","rotationAngle","rotationDirection","Math","innerPentagons","update","draw","strokeWeight","rotate","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","pop","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","bpm","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","noteSet2","noteSet3","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","note","ticks","time","addCue","pentagons","miniPentagons","miniPentagons2","colourFills","colourStrokes","darkMode","setup","createCanvas","colorMode","HSB","angleMode","DEGREES","background","isPlaying","pentagon","angle","executeCueSet1","_ref","fillIndex","strokeIndex","filter","num","executeCueSet2","_ref2","delay","checkForCollisions","index","setTimeout","executeCueSet3","_ref3","pentagonsPerSet","map","pentagonsToAdd","shuffle","buffer","existingSet","dx","dy","sqrt","hasStarted","mousePressed","pause","parseInt","currentTime","duration","reset","dataLayer","title","location","href","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.49554b67.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function TetradicColourCalculator(p5, hue, saturation = 100, brightness = 100, alpha = 1) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          alpha\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction TriadicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 3){\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        hue = hue + 120 < 360 ? hue + 120 : hue - 240;\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction ComplementaryColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 2){\n        hue = hue + i * 180;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nexport { TetradicColourCalculator, TriadicColourCalculator, ComplementaryColourCalculator };","export default class Pentagon {\r\n\r\n    /**\r\n     * Inspiration:\r\n     * \r\n     * https://gaweph.github.io/p5-typescript-starter/\r\n     * https://editor.p5js.org/wintyo/sketches/6aiF8y8V_\r\n     * https://github.com/tex2e/p5js-pentagon\r\n     * https://editor.p5js.org/unicornCoder/sketches/z1W5mj2Kj\r\n     * https://openprocessing.org/sketch/955445/ \r\n     */\r\n\r\n    constructor(p, x, y, fill, stroke, includeSubSet) {\r\n        this.p = p;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.speed = p.random(p.width / 512, p.width / 256);\r\n        this.size = p.width / 128;\r\n        this.fill = fill;\r\n        this.stroke = stroke;\r\n        this.rotationAngle = 0;\r\n        this.rotationDirection = Math.random() > 0.5 ? 'clockwise' : 'anti-clockwise';\r\n        this.innerPentagons = [];\r\n    }\r\n\r\n    update () {\r\n        this.size = this.size + this.speed;\r\n        this.rotationAngle = this.rotationDirection === 'clockwise' ? this.rotationAngle + (this.speed / 24) : this.rotationAngle - (this.speed / 24);\r\n    }\r\n\r\n    draw () {\r\n        this.p.fill(this.fill);\r\n        this.p.stroke(this.stroke);\r\n        this.p.strokeWeight(this.p.width / 128);\r\n        this.p.push();\r\n        // this.p.translate(translateX, translateY);\r\n        this.p.rotate(this.rotationAngle);\r\n        this.p.beginShape();\r\n        for (let a = 0; a < 360; a += (360 / 5)) {\r\n            let sx = this.x + this.p.cos(a) * this.size;\r\n            let sy = this.y + this.p.sin(a) * this.size;\r\n            this.p.vertex(sx, sy);\r\n        }\r\n        this.p.endShape(this.p.CLOSE);\r\n        this.p.pop();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/pentagons-no-1.c8cc49f5.ogg\";","export default __webpack_public_path__ + \"static/media/pentagons-no-1.4d62366c.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport { TetradicColourCalculator } from './functions/ColourCalculators.js';\nimport Pentagon from './classes/Pentagon.js';\n\nimport audio from \"../audio/pentagons-no-1.ogg\";\nimport midi from \"../audio/pentagons-no-1.mid\";\n\n/**\n * Circles No. 8\n * Inspiration: https://openprocessing.org/sketch/505090\n */\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.bpm = 105;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[1].notes; // FM 8 - Brains of Meek\n                    const noteSet2 = result.tracks[9].notes; // Massive - Suspect\n                    const noteSet3 = result.tracks[2].notes; // Combinator - Little Voices\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        }\n\n        p.pentagons = [];\n\n        p.miniPentagons = [];\n\n        p.miniPentagons2 = [];\n\n        p.colourFills = [];\n\n        p.colourStrokes = [];\n\n        p.darkMode = false;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.colorMode(p.HSB);\n            p.angleMode(p.DEGREES);\n            p.darkMode = Math.random() > 0.5;\n            p.background(\n                0, \n                0, \n                p.darkMode ? 0 : 100\n            );\n            p.stroke(0, 0, 100);\n            const hue = p.random(0, 360);\n            p.colourFills = TetradicColourCalculator(p, hue, 100, 100, 0.33);\n            p.colourStrokes = TetradicColourCalculator(p, hue, 100, 100, 0.66);\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                p.background(\n                    0, \n                    0, \n                    p.darkMode ? 0 : 100\n                );\n                for (let i = 0; i < p.miniPentagons.length; i++) {\n                    const pentagon = p.miniPentagons[i];\n                    const { x, y, size, fill, angle } = pentagon;\n                    p.stroke(\n                        0, \n                        0, \n                        p.darkMode ? 100 : 0\n                    );\n                    p.fill(fill);\n                    p.strokeWeight(4);\n                    p.beginShape();\n                    for (let a = angle; a < angle + 360; a += (360 / 5)) {\n                        let sx = x + p.cos(a) * size;\n                        let sy = y + p.sin(a) * size;\n                        p.vertex(sx, sy);\n                    }\n                    p.endShape(p.CLOSE);\n                }\n                for (let i = 0; i < p.pentagons.length; i++) {\n                    const pentagon = p.pentagons[i];\n                    pentagon.draw();\n                    pentagon.update();\n                }\n                for (let i = 0; i < p.miniPentagons2.length; i++) {\n                    const pentagon = p.miniPentagons2[i];\n                    const { x, y, size, fill, angle } = pentagon;\n                    p.stroke(\n                        0, \n                        0, \n                        p.darkMode ? 0 : 100\n                    );\n                    p.fill(fill);\n                    p.strokeWeight(2);\n                    p.beginShape();\n                    for (let a = angle; a < angle + 360; a += (360 / 5)) {\n                        let sx = x + p.cos(a) * size;\n                        let sy = y + p.sin(a) * size;\n                        p.vertex(sx, sy);\n                    }\n                    p.endShape(p.CLOSE);\n                }\n            }\n        }\n\n        p.executeCueSet1 = ({currentCue}) => {\n            if(currentCue % 8 === 1) {\n                p.pentagons = [];\n                if(currentCue > 1) {\n                    p.darkMode = Math.random() > 0.5;\n                }\n                const hue = p.random(0, 360);\n                p.colourFills = TetradicColourCalculator(p, hue, 100, 100, 0.33);\n                p.colourStrokes = TetradicColourCalculator(p, hue, 100, 100, 0.66);\n            }\n            const x = p.random(p.width / 8, p.width - p.width / 8);\n            const y = p.random(p.height / 8, p.height - p.height / 8);\n            const fillIndex = p.random([0,1,2,3]);\n            const strokeIndex = p.random([0,1,2,3].filter(num => num !== fillIndex))\n            p.pentagons.push(\n                new Pentagon(\n                    p, \n                    x, \n                    y, \n                    p.colourFills[fillIndex],\n                    p.colourStrokes[strokeIndex]\n                )\n            )\n        }\n\n        p.executeCueSet2 = ({currentCue}) => {\n            if(currentCue > 10 && currentCue % 2) {\n                if(currentCue % 16 === 1) {\n                    p.miniPentagons = [];\n                }\n                const delay = 428.55;\n                let x, y, size;\n\n                do {\n                    x = p.random(p.width / 8, p.width - p.width / 8);\n                    y = p.random(p.height / 8, p.height - p.height / 8);\n                    size = p.random(p.height / 64, p.width / 32);\n                } while (p.checkForCollisions(x, y, size * 5));\n\n                for (let index = 0; index < 5; index++) {\n                    setTimeout(() => {\n                        const fill = p.colourFills[p.random([0,1,2,3])];\n                        const angle = p.random(0, 360);\n                        p.miniPentagons.push(\n                            {\n                                x, \n                                y, \n                                size: size * (index + 1), \n                                fill,\n                                angle\n                            }\n                        );\n                    }, delay * index);\n                }\n            }\n        }\n\n        p.executeCueSet3 = ({currentCue, midi, ticks, ...note}) => {\n            if(currentCue > 39 && currentCue % 3) {\n                if(currentCue % 24 === 1) {\n                    p.miniPentagons2 = [];\n                }\n                const delay = currentCue > 69 ? 125 : 66;\n                const pentagonsPerSet = 25;\n                const size = p.random(p.height / 32, p.width / 16);\n                const x = p.map(\n                    ticks % 491520,\n                    0, \n                    491520, \n                    p.width / 32, \n                    p.width - p.width / 32\n                );\n                const y = p.map(\n                    midi,\n                    75,\n                    61, \n                    p.height / 12, \n                    p.height - p.height / 12\n                );\n                let pentagonsToAdd = [];\n                for (let index = 1; index < pentagonsPerSet; index++) {\n                    const fill = p.colourFills[p.random([0,1,2,3])];\n                    const angle = p.random(0, 360);\n                    pentagonsToAdd.push(\n                        {\n                            x, \n                            y, \n                            size: size - ((size / pentagonsPerSet) * index), \n                            fill,\n                            angle\n                        }\n                    );\n                }\n                pentagonsToAdd = p.shuffle(pentagonsToAdd);\n                for (let index = 0; index < pentagonsToAdd.length; index++) {\n                    setTimeout(() => {\n                        p.miniPentagons2.push(\n                            pentagonsToAdd[index]\n                        );\n                    }, delay * index);\n                }\n            }\n        }\n\n        p.checkForCollisions = (x, y, size) => {\n            const buffer = size / 2; // Add some buffer space between sets\n            for (let i = 0; i < p.miniPentagons.length; i += 5) {\n                const existingSet = p.miniPentagons[i];\n                const dx = existingSet.x - x;\n                const dy = existingSet.y - y;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                if (distance < existingSet.size * 5 + size + buffer) {\n                    return true; // Collision detected\n                }\n            }\n            return false; // No collision\n        }\n\n        p.hasStarted = false;\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                        if (typeof window.dataLayer !== typeof undefined){\n                            window.dataLayer.push(\n                                { \n                                    'event': 'play-animation',\n                                    'animation': {\n                                        'title': document.title,\n                                        'location': window.location.href,\n                                        'action': 'replaying'\n                                    }\n                                }\n                            );\n                        }\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\n                        window.dataLayer.push(\n                            { \n                                'event': 'play-animation',\n                                'animation': {\n                                    'title': document.title,\n                                    'location': window.location.href,\n                                    'action': 'start playing'\n                                }\n                            }\n                        );\n                        p.hasStarted = false\n                    }\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}